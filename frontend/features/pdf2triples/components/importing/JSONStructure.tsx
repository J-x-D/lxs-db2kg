import {
  ArrowDropDown,
  Check,
  ContentCopy,
  InfoOutlined,
} from "@mui/icons-material";
import { Box, Collapse, IconButton, Stack, Typography } from "@mui/material";
import React, { useEffect } from "react";
import "prismjs/themes/prism.css";
import Editor from "react-simple-code-editor";
import Prism from "prismjs";
import theme from "src/theme";
import GuidanceInfoAlert from "components/Guidance/GuidanceInfoAlert/GuidanceInfoAlert";

function CopyCodeButton({ code }: { code: string }) {
  const [copied, setCopied] = React.useState(false);
  const [_navigator, setNavigator] = React.useState<any>(null);

  useEffect(() => {
    setNavigator(navigator);
  }, []);

  const handleClickedCopy = () => {
    _navigator.clipboard.writeText(code);
    setCopied(true);
    setTimeout(() => {
      setCopied(false);
    }, 2000);
  };
  return (
    <IconButton
      sx={{
        position: "absolute",
        top: 10,
        right: 10,
        zIndex: 1,
        color: theme.palette.grey[500],
        "&:hover": {
          color: theme.palette.grey[700],
        },
      }}
      onClick={handleClickedCopy}
      size="small"
    >
      {copied ? (
        <Check color="success" fontSize="small" />
      ) : (
        <ContentCopy fontSize="small" />
      )}
    </IconButton>
  );
}

function DefaultHeader() {
  return (
    <Typography
      fontWeight={"bold"}
      sx={{ display: "flex", alignItems: "center", gap: "0.5rem" }}
    >
      JSON Structure
      <InfoOutlined fontSize="small" style={{ color: "rgba(0, 0, 0, 0.6)" }} />
    </Typography>
  );
}

export default function JSONStructure({
  code,
  header = DefaultHeader(),
  showGuidanceAlert = false,
}: {
  code: string;
  header?: React.ReactNode;
  showGuidanceAlert?: boolean;
}) {
  const [collaped, setCollapsed] = React.useState(true);

  const handleToggle = () => setCollapsed((prev) => !prev);

  return (
    <Stack className="success-preview-triples" gap={1}>
      <Stack
        direction="row"
        justifyContent="space-between"
        alignItems={"center"}
        sx={{ cursor: "pointer" }}
        onClick={handleToggle}
      >
        {header}
        <ArrowDropDown
          sx={{
            transform: collaped ? "rotate(0deg)" : "rotate(180deg)",
            transition: "transform 0.3s",
          }}
        />
      </Stack>
      <Collapse in={!collaped}>
        {showGuidanceAlert && (
          <GuidanceInfoAlert
            text={
              <>
                Since this structure is very specific, it is recommended <br />
                to only upload files generated by this tool.
              </>
            }
          />
        )}
        <Typography
          variant="body2"
          color="text.secondary"
          sx={{
            my: 1.5,
          }}
        >
          This is the expected structure of the JSON file. <br />
          Not following this structure will result in an error.
        </Typography>
        <Box
          component="div"
          sx={{
            position: "relative",
            backgroundColor: "#f7f7f7",
            padding: 0,
            border: "1px solid #e0e0e0",
            borderRadius: theme.shape.borderRadius + "px",
            maxHeight: 500,
          }}
        >
          <CopyCodeButton code={code} />
          <Editor
            value={code}
            onValueChange={() => {}}
            highlight={(code: any) =>
              Prism.highlight(code, Prism.languages.js, "json")
            }
            padding={10}
            style={{
              fontFamily: '"Fira code", "Fira Mono", monospace',
              fontSize: 12,
              margin: 1,
            }}
          />
        </Box>
      </Collapse>
    </Stack>
  );
}
